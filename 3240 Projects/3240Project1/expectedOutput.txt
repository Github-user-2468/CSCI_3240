00000000: 2f2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a  /***************
00000010: 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a  ****************
00000020: 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a  ****************
00000030: 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a  ****************
00000040: 2a2a 2a0a 5072 6f67 7261 6d20 4e61 6d65  ***.Program Name
00000050: 3a20 5072 6f6a 6563 7431 0a50 726f 6772  : Project1.Progr
00000060: 616d 6d65 723a 204b 6172 6967 616e 2053  ammer: Karigan S
00000070: 7465 7761 7274 0a44 6174 653a 2030 392d  tewart.Date: 09-
00000080: 3137 2d32 340a 4465 7363 7269 7074 696f  17-24.Descriptio
00000090: 6e3a 2054 6869 7320 7072 6f67 7261 6d20  n: This program 
000000a0: 7461 6b65 7320 6120 6669 6c65 6e61 6d65  takes a filename
000000b0: 2061 7320 636f 6d6d 616e 6420 6c69 6e65   as command line
000000c0: 2069 6e70 7574 200a 616e 6420 6765 6e65   input .and gene
000000d0: 7261 7465 7320 6120 6865 7820 6475 6d70  rates a hex dump
000000e0: 206f 6e20 7468 6520 6669 6c65 2074 7261   on the file tra
000000f0: 6e73 6c61 7469 6e67 2074 6865 2041 5343  nslating the ASC
00000100: 4949 2063 6861 7273 0a69 6e74 6f20 7468  II chars.into th
00000110: 6569 7220 6865 7861 6465 6369 6d61 6c20  eir hexadecimal 
00000120: 6571 7569 6c76 616c 656e 7420 0a2a 2a2a  equilvalent .***
00000130: 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a  ****************
00000140: 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a  ****************
00000150: 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a  ****************
00000160: 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2f  ***************/
00000170: 0a0a 0a23 696e 636c 7564 6520 3c73 7464  ...#include <std
00000180: 696f 2e68 3e0a 2369 6e63 6c75 6465 203c  io.h>.#include <
00000190: 7374 646c 6962 2e68 3e0a 2369 6e63 6c75  stdlib.h>.#inclu
000001a0: 6465 203c 6374 7970 652e 683e 0a0a 2364  de <ctype.h>..#d
000001b0: 6566 696e 6520 4348 554e 4b5f 5349 5a45  efine CHUNK_SIZE
000001c0: 2031 3620 202f 2f20 4e75 6d62 6572 206f   16  // Number o
000001d0: 6620 6279 7465 7320 7065 7220 6c69 6e65  f bytes per line
000001e0: 2069 6e20 6865 7820 6475 6d70 0a23 6465   in hex dump.#de
000001f0: 6669 6e65 2047 524f 5550 5f53 495a 4520  fine GROUP_SIZE 
00000200: 3220 2020 2f2f 204e 756d 6265 7220 6f66  2   // Number of
00000210: 2062 7974 6573 2070 6572 2067 726f 7570   bytes per group
00000220: 0a0a 2f2f 4865 7820 6475 6d70 2070 726f  ..//Hex dump pro
00000230: 746f 7479 7065 0a76 6f69 6420 7072 696e  totype.void prin
00000240: 7448 6578 4475 6d70 2846 494c 4520 2a66  tHexDump(FILE *f
00000250: 696c 6529 3b0a 0a69 6e74 206d 6169 6e28  ile);..int main(
00000260: 696e 7420 6172 6763 2c20 6368 6172 202a  int argc, char *
00000270: 6172 6776 5b5d 2920 7b0a 2020 2020 2f2f  argv[]) {.    //
00000280: 2043 6865 636b 2066 6f72 2063 6f72 7265   Check for corre
00000290: 6374 206e 756d 6265 7220 6f66 2063 6f6d  ct number of com
000002a0: 6d61 6e64 2d6c 696e 6520 6172 6775 6d65  mand-line argume
000002b0: 6e74 730a 2020 2020 6966 2028 6172 6763  nts.    if (argc
000002c0: 2021 3d20 3229 207b 0a20 2020 2020 2020   != 2) {.       
000002d0: 2066 7072 696e 7466 2873 7464 6572 722c   fprintf(stderr,
000002e0: 2022 5573 6167 653a 2025 7320 3c66 696c   "Usage: %s <fil
000002f0: 656e 616d 653e 5c6e 222c 2061 7267 765b  ename>\n", argv[
00000300: 305d 293b 0a20 2020 2020 2020 2072 6574  0]);.        ret
00000310: 7572 6e20 4558 4954 5f46 4149 4c55 5245  urn EXIT_FAILURE
00000320: 3b0a 2020 2020 7d0a 0a20 2020 202f 2f20  ;.    }..    // 
00000330: 4f70 656e 2074 6865 2066 696c 6520 7370  Open the file sp
00000340: 6563 6966 6965 6420 6279 2074 6865 2063  ecified by the c
00000350: 6f6d 6d61 6e64 2d6c 696e 6520 6172 6775  ommand-line argu
00000360: 6d65 6e74 0a20 2020 2046 494c 4520 2a66  ment.    FILE *f
00000370: 696c 6520 3d20 666f 7065 6e28 6172 6776  ile = fopen(argv
00000380: 5b31 5d2c 2022 7262 2229 3b0a 2020 2020  [1], "rb");.    
00000390: 6966 2028 6669 6c65 203d 3d20 4e55 4c4c  if (file == NULL
000003a0: 2920 7b0a 2020 2020 2020 2020 7065 7272  ) {.        perr
000003b0: 6f72 2822 4572 726f 7220 6f70 656e 696e  or("Error openin
000003c0: 6720 6669 6c65 2229 3b0a 2020 2020 2020  g file");.      
000003d0: 2020 7265 7475 726e 2045 5849 545f 4641    return EXIT_FA
000003e0: 494c 5552 453b 0a20 2020 207d 0a0a 2020  ILURE;.    }..  
000003f0: 2020 2f2f 2050 7269 6e74 2074 6865 2068    // Print the h
00000400: 6578 2064 756d 7020 6f66 2074 6865 2066  ex dump of the f
00000410: 696c 650a 2020 2020 7072 696e 7448 6578  ile.    printHex
00000420: 4475 6d70 2866 696c 6529 3b0a 0a20 2020  Dump(file);..   
00000430: 202f 2f20 436c 6f73 6520 7468 6520 6669   // Close the fi
00000440: 6c65 0a20 2020 2066 636c 6f73 6528 6669  le.    fclose(fi
00000450: 6c65 293b 0a0a 2020 2020 7265 7475 726e  le);..    return
00000460: 2045 5849 545f 5355 4343 4553 533b 0a7d   EXIT_SUCCESS;.}
00000470: 0a0a 0a2f 2f20 4675 6e63 7469 6f6e 2074  ...// Function t
00000480: 6f20 7072 696e 7420 7468 6520 6865 7861  o print the hexa
00000490: 6465 6369 6d61 6c20 616e 6420 4153 4349  decimal and ASCI
000004a0: 4920 7265 7072 6573 656e 7461 7469 6f6e  I representation
000004b0: 0a76 6f69 6420 7072 696e 7448 6578 4475  .void printHexDu
000004c0: 6d70 2846 494c 4520 2a66 696c 6529 207b  mp(FILE *file) {
000004d0: 0a20 2020 2075 6e73 6967 6e65 6420 6368  .    unsigned ch
000004e0: 6172 2068 6578 4368 6172 5b43 4855 4e4b  ar hexChar[CHUNK
000004f0: 5f53 495a 455d 3b0a 2020 2020 7369 7a65  _SIZE];.    size
00000500: 5f74 2062 7974 6573 5265 6164 3b0a 2020  _t bytesRead;.  
00000510: 2020 756e 7369 676e 6564 2069 6e74 206f    unsigned int o
00000520: 6666 7365 7420 3d20 303b 0a0a 2020 2020  ffset = 0;..    
00000530: 7768 696c 6520 2828 6279 7465 7352 6561  while ((bytesRea
00000540: 6420 3d20 6672 6561 6428 6865 7843 6861  d = fread(hexCha
00000550: 722c 2031 2c20 4348 554e 4b5f 5349 5a45  r, 1, CHUNK_SIZE
00000560: 2c20 6669 6c65 2929 203e 2030 2920 7b0a  , file)) > 0) {.
00000570: 2020 2020 2020 2020 2f2f 2050 7269 6e74          // Print
00000580: 2074 6865 206f 6666 7365 7420 696e 2068   the offset in h
00000590: 6578 6164 6563 696d 616c 0a20 2020 2020  exadecimal.     
000005a0: 2020 2070 7269 6e74 6628 2225 3038 783a     printf("%08x:
000005b0: 2022 2c20 6f66 6673 6574 293b 0a0a 2020   ", offset);..  
000005c0: 2020 2020 2f2f 2050 7269 6e74 2074 6865      // Print the
000005d0: 2068 6578 2076 616c 7565 7320 6f66 2074   hex values of t
000005e0: 6865 2068 6578 4368 6172 2077 6974 6820  he hexChar with 
000005f0: 6772 6f75 7069 6e67 0a20 2020 2020 2020  grouping.       
00000600: 2066 6f72 2028 7369 7a65 5f74 2069 203d   for (size_t i =
00000610: 2030 3b20 6920 3c20 4348 554e 4b5f 5349   0; i < CHUNK_SI
00000620: 5a45 3b20 692b 2b29 207b 0a20 2020 2020  ZE; i++) {.     
00000630: 2020 2020 2020 2069 6620 2869 203c 2062         if (i < b
00000640: 7974 6573 5265 6164 2920 7b0a 2020 2020  ytesRead) {.    
00000650: 2020 2020 2020 2020 2020 2020 7072 696e              prin
00000660: 7466 2822 2530 3278 222c 2068 6578 4368  tf("%02x", hexCh
00000670: 6172 5b69 5d29 3b0a 2020 2020 2020 2020  ar[i]);.        
00000680: 2020 2020 7d20 656c 7365 207b 0a20 2020      } else {.   
00000690: 2020 2020 2020 2020 2020 2020 2070 7269               pri
000006a0: 6e74 6628 2220 2022 293b 2020 0a20 2020  ntf("  ");  .   
000006b0: 2020 2020 2020 2020 207d 0a0a 2020 2020           }..    
000006c0: 2020 2020 2020 2020 2f2f 2041 6464 2061          // Add a
000006d0: 2073 7061 6365 2061 6674 6572 2065 7665   space after eve
000006e0: 7279 2047 524f 5550 5f53 495a 4520 6279  ry GROUP_SIZE by
000006f0: 7465 7320 0a20 2020 2020 2020 2020 2020  tes .           
00000700: 2069 6620 2828 6920 2520 4752 4f55 505f   if ((i % GROUP_
00000710: 5349 5a45 203d 3d20 4752 4f55 505f 5349  SIZE == GROUP_SI
00000720: 5a45 202d 2031 2920 2626 2028 6920 3c20  ZE - 1) && (i < 
00000730: 4348 554e 4b5f 5349 5a45 202d 2031 2929  CHUNK_SIZE - 1))
00000740: 207b 0a20 2020 2020 2020 2020 2020 2020   {.             
00000750: 2020 2070 7269 6e74 6628 2220 2229 3b0a     printf(" ");.
00000760: 2020 2020 2020 2020 2020 2020 7d0a 2020              }.  
00000770: 2020 2020 2020 7d0a 0a20 2020 2020 202f        }..      /
00000780: 2f20 5072 696e 7420 7468 6520 4153 4349  / Print the ASCI
00000790: 4920 7265 7072 6573 656e 7461 7469 6f6e  I representation
000007a0: 0a20 2020 2020 2020 2070 7269 6e74 6628  .        printf(
000007b0: 2220 2022 293b 0a20 2020 2020 2020 2066  "  ");.        f
000007c0: 6f72 2028 7369 7a65 5f74 2069 203d 2030  or (size_t i = 0
000007d0: 3b20 6920 3c20 6279 7465 7352 6561 643b  ; i < bytesRead;
000007e0: 2069 2b2b 2920 7b0a 2020 2020 2020 2020   i++) {.        
000007f0: 2020 2020 6966 2028 6973 7072 696e 7428      if (isprint(
00000800: 6865 7843 6861 725b 695d 2929 207b 0a20  hexChar[i])) {. 
00000810: 2020 2020 2020 2020 2020 2020 2020 2070                 p
00000820: 7269 6e74 6628 2225 6322 2c20 6865 7843  rintf("%c", hexC
00000830: 6861 725b 695d 293b 0a20 2020 2020 2020  har[i]);.       
00000840: 2020 2020 207d 2065 6c73 6520 7b0a 2020       } else {.  
00000850: 2020 2020 2020 2020 2020 2020 2020 7072                pr
00000860: 696e 7466 2822 2e22 293b 2020 2f2f 2052  intf(".");  // R
00000870: 6570 6c61 6365 2075 6e70 7269 6e74 6162  eplace unprintab
00000880: 6c65 2063 6861 7261 6374 6572 7320 7769  le characters wi
00000890: 7468 2027 2e27 0a20 2020 2020 2020 2020  th '.'.         
000008a0: 2020 207d 0a20 2020 2020 2020 207d 0a0a     }.        }..
000008b0: 2020 2020 2020 2020 7072 696e 7466 2822          printf("
000008c0: 5c6e 2229 3b20 202f 2f20 4e65 7720 6c69  \n");  // New li
000008d0: 6e65 2061 6674 6572 2065 6163 6820 6368  ne after each ch
000008e0: 756e 6b0a 2020 2020 2020 2020 6f66 6673  unk.        offs
000008f0: 6574 202b 3d20 4348 554e 4b5f 5349 5a45  et += CHUNK_SIZE
00000900: 3b0a 2020 2020 7d0a 7d0a                 ;.    }.}.
